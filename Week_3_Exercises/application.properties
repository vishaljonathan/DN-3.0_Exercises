spring.application.name=employeemanagementsystem
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa	
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Externalized Data Source Configuration
spring.datasource.secondary.url=jdbc:mysql://localhost:3306/employeedb
spring.datasource.secondary.username=root
spring.datasource.secondary.password=yourpassword
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


# Employee Data Source
spring.employee.datasource.url=jdbc:mysql://localhost:3306/employee_db
spring.employee.datasource.username=root
spring.employee.datasource.password=yourpassword
spring.employee.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.employee.jpa.hibernate.ddl-auto=update
spring.employee.jpa.show-sql=true
spring.employee.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# Department Data Source
spring.department.datasource.url=jdbc:postgresql://localhost:5432/department_db
spring.department.datasource.username=root
spring.department.datasource.password=yourpassword
spring.department.datasource.driver-class-name=org.postgresql.Driver
spring.department.jpa.hibernate.ddl-auto=update
spring.department.jpa.show-sql=true
spring.department.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Enable second-level cache
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory

# Batch fetching
spring.jpa.properties.hibernate.default_batch_fetch_size=16

# Statement batch size for bulk updates
spring.jpa.properties.hibernate.jdbc.batch_size=20

# Enable statistics for performance tuning (useful for debugging)
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
